name: Demo CI/CD with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: application.yml 
        run: |
          mkdir ./src/main/resources
          touch ./src/main/resources/application.yml
          echo "${{ secrets.APPLICATION }}" > ./src/main/resources/application.yml # github actions에서 설정한 값을 application.yml 파일에 쓰기

      - name: gradle build
        run: chmod +x gradlew

      - name: gradle build 
        run: ./gradlew build -x test

      - name: docker 
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t ${{ secrets.DOCKER_REPOSITORY }}/${{ secrets.DOCKER_IMAGE }} .
          docker push ${{ secrets.DOCKER_REPOSITORY }}/${{ secrets.DOCKER_IMAGE }}

      - name: deploy.sh 
        uses: appleboy/scp-action@master
        with:
          username: ubuntu
          host: ${{ secrets.AWS_HOST }}
          key: ${{ secrets.AWS_KEY }}
          port: ${{ secrets.AWS_PORT }}
          source: "./scripts/deploy.sh"
          target: "/home/ubuntu/"
#
      - name: docker-compose.yml 
        uses: appleboy/scp-action@master
        with:
          username: ubuntu
          host: ${{ secrets.AWS_HOST }}
          key: ${{ secrets.AWS_KEY }}
          port: ${{ secrets.AWS_PORT }}
          source: "./docker-compose.yml"
          target: "/home/ubuntu/"

      - name: docker hub depoly
        uses: appleboy/ssh-action@master
        with:
          username: ubuntu
          host: ${{ secrets.AWS_HOST }}
          key: ${{ secrets.AWS_KEY }}
          script: |
            sudo docker pull ${{ secrets.DOCKER_REPOSITORY }}/${{ secrets.DOCKER_IMAGE }}
            chmod 777 ./scripts/deploy.sh
            cp ./scripts/deploy.sh ./deploy.sh
            ./deploy.sh
            docker image prune -f
